@startuml

class ExamSystemService {
  - db_service_: DataBaseService&
  - log_service_: LogService&
  - authentic_: Authentication
  - user_: User
}

class User {
  - db_service_: DataBaseService&
  - log_service_: LogService&
  - user_id_: int
  - user_name_: string
  - password_: string
  - authority_: int
}

class Admin extends User {
  - userManagement: UserManagement
  - scheduleServiceAdmin: IScheduleServiceAdmin
}

class Teacher extends User {
  - course_ : CourseType
  - scheduleServiceTeacher: IScheduleServiceTeacher
  - questionBank: IQuestionBankService
  - paperBank: IPaperBankService
  - answerBankTeacher: IAnswerBankServiceTeacher
}

class Student extends User {
  - scheduleServiceStudent: IScheduleServiceStudent
  - answerBankStudent: IAnswerBankServiceStudent
}

class Authentication {
  - db_service_: DataBaseService&
  - log_service_: LogService&
  + Login()
}

class Schedule {
    - schedule_id_: int
    - schedule_date_: std::string
    - time_begin_: std::string
    - time_end_: std::string
    - course_: CourseType
    - paper_id_: int
    - request_flag_: bool
    + set_request_flag(bool): void
}

interface IScheduleServiceAdmin {
    {abstract} + CheckScheduleRequest(): void
    {abstract} + ChooseAndSetRequest(): void
    {abstract} + AddSchedule(): void
    {abstract} + ViewSchedule(): void
}

interface IScheduleServiceTeacher {
    {abstract} + CommitScheduleRequest(): void
    {abstract} + ViewSchedule(): void
}

interface IScheduleServiceStudent {
    {abstract} + RemindSchedule(): void
    {abstract} + ViewSchedule(): void
}

class ScheduleService {
    - db_service_: DataBaseService&
    - log_service_: LogService&
    - schedule_list_: std::vector<Schedule>
    + ViewSchedule(): void
    + CheckScheduleRequest(): void
    + ChooseAndSetRequest(): void
    + AddSchedule(): void
    + CommitScheduleRequest(): void
    + RemindSchedule(): void
}

class UserManagement {
  - db_service_: DataBaseService&
  - log_service_: LogService&
  + ViewUserList()
  + AddUser()
  + FindItem()
  + UpdateItem()
  + DeleteItem()
}

class Question {
  - question_id_: int
  - course_: CourseType
  - type_: QuestionType
  - quetion_context_: std::string
  - mark_: int
  + ShowQuestion(): void
}

class ChoiceQuestion extends Question {
    - question_choices_: std::array<std::string, 4>
    - question_answer_: int
    + ShowQuestion(): void
}

class JudgementQuestion extends Question {
    - question_answer_: bool
    + ShowQuestion(): void
}

class SubjectiveQuestion extends Question {
    - question_answer_: std::string
    + ShowQuestion(): void
}

interface IQuestionBankService {
    + ViewQuestionList(): void
    + CreateQuestion(): Question
    + AddQuestion(): void
    + ChooseQuestion(): void
}

class QuestionBankService {
    - db_service_: DataBaseService&
    - log_service_: LogService&
    + ViewQuestionList(): void
    + CreateQuestion(): Question
    + AddQuestion(): void
    + ChooseQuestion(): void
}

class Paper {
    - paper_id_: int
    - course_: CourseType
    - paper_name_: std::string
    - total_mark_: int
    - question_id_list_: std::vector<int>
    + ShowPaper(): void
}

interface IPaperBankService {
    + ViewPaperList(): void
    + CreatePaper(): Paper
    + AddPaper(): void
}

class PaperBankService {
    - db_service_: DataBaseService&
    - log_service_: LogService&
    + ViewPaperList(): void
    + CreatePaper(): Paper
    + AddPaper(): void
}

class Answer {
    - answer_id_: int
    - question_id_: int
    - answer_context_: std::variant<int, bool, std::string>
    - mark_: int
}

class AnswerSheet {
    - answer_sheet_id_: int
    - paper_id_: int
    - student_id_: int
    - total_mark_: int
    - answer_list_: std::vector<Answer>
    + ShowAnswerSheet(): void
}

interface IAnswerBankServiceTeacher {
    + ViewAnswerList(): void
    + ChooseAnswer(): void
    + CorrectAnswer(): void
}
interface IAnswerBankServiceStudent {
    + StartAnswer(): void
    + ViewResult(): AnswerSheet
}

class AnswerBankService {
    - db_service_: DataBaseService&
    - log_service_: LogService&
    
    + ViewAnswerList(): void
    + ChooseAnswer(): void
    + CorrectAnswer(): void
    + StartAnswer(): void
    + ViewResult(): AnswerSheet
}

interface IDataBaseRepository {
    +CreateItem()
    +FindItem()
    +UpdateItem()
    +DeleteItem()
}

class JsonUserRepository {
    +CreateItem()
    +FindItem()
    +UpdateItem()
    +DeleteItem()
}

class RedisUserRepository {
    +CreateItem()
    +FindItem()
    +UpdateItem()
    +DeleteItem()
}

class DataBaseService {
    -userRepository: IDataBaseRepository

    +SetUserRepository(repository: IDataBaseRepository)
    +Connect()
    +Disconnect()
    +CreateItem()
    +FindItem()
    +UpdateItem()
    +DeleteItem()
}



class LogService {
  + WriteLog()
  + ViewLog()
}

ExamSystemService "1..n" --o "1" DataBaseService
ExamSystemService "1..n" --o "1" LogService
ExamSystemService "1" --* "1" Authentication
ExamSystemService "1" --* "1" User

User "1..n" --o "1" DataBaseService
User "1..n" --o "1" LogService

Admin "1" --> "1" UserManagement
Admin "1" --> "1" IScheduleServiceAdmin

Teacher "1" --> "1" IScheduleServiceTeacher 
Teacher "1" --> "1" IQuestionBankService
Teacher "1" --> "1" IPaperBankService 
Teacher "1" --> "1" IAnswerBankServiceTeacher 

Student "1" --> "1" IScheduleServiceStudent
Student "1" --> "1" IAnswerBankServiceStudent

Authentication "1..n" --o "1" DataBaseService
Authentication "1..n" --o "1" LogService

IScheduleServiceAdmin <|.. ScheduleService
IScheduleServiceTeacher <|.. ScheduleService
IScheduleServiceStudent <|.. ScheduleService

ScheduleService "1..n" --o "1" DataBaseService
ScheduleService "1..n" --o "1" LogService
ScheduleService --> Schedule

UserManagement "1..n" --o "1" DataBaseService
UserManagement "1..n" --o "1" LogService

IQuestionBankService <|.. QuestionBankService
QuestionBankService "1..n" --o "1" DataBaseService
QuestionBankService "1..n" --o "1" LogService
QuestionBankService --> Question

IPaperBankService <|.. PaperBankService
PaperBankService "1..n" --o "1" DataBaseService
PaperBankService "1..n" --o "1" LogService
PaperBankService --> Paper

IAnswerBankServiceTeacher <|.. AnswerBankService
IAnswerBankServiceStudent <|.. AnswerBankService
AnswerBankService "1..n" --o "1" DataBaseService
AnswerBankService "1..n" --o "1" LogService
AnswerBankService --> AnswerSheet
AnswerSheet --> Answer

IDataBaseRepository <|.. JsonUserRepository
IDataBaseRepository <|.. RedisUserRepository
DataBaseService *-- IDataBaseRepository

enum CourseType {
   kSubjectPython = 0,
   kSubjectCpp, 
}

enum QuestionType {
    kQuestionTypeChoice = 0,
    kQuestionTypeJudge,
    kQuestionTypeSubject,
}

CourseType <.. "0..*" Schedule
CourseType <.. "0..*" Teacher
CourseType <.. "0..*" Question
CourseType <.. "0..*" Paper
QuestionType <.. "0..*" Question


@enduml